product-list.component

import React, { Component } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

const Product = props => (
    <tr>
      <td>{props.product.categoryName}</td>
      <td>{props.product.productName}</td>
      <td>{props.product.description}</td>
      <td>{props.product.price}</td>
      <td>{props.product.paidFor}</td>
      <td>{props.product.date.substring(0,10)}</td>
      <td>
        <Link to={"/edit/"+props.product._id}>edit</Link> | <a href="#" onClick={() => { props.deleteProduct(props.product._id) }}>delete</a>
      </td>
    </tr>
  )

export default class ProductList extends Component {
    constructor(props) {
        super(props);

        this.deleteProduct = this.deleteProduct.bind(this);

        this.state = {products: []};
    }

    componentDidMount() {
        axios.get('http://localhost:5000/products/')
            .then(response => {
                this.setState({ products: response.data})
            })
            .catch((error) => {
                console.log(error);
            })
    }


    deleteProduct(id) {
        axios.delete('http://localhost:5000/products/'+id)
            .then(response => console.log(response.data));

        this.setState({
            products: this.state.products.filter(pl => pl._id !== id)
        })
    }

    productList() {
        return this.state.products.map(currentproduct => {
          return <Product product={currentproduct} deleteProduct={this.deleteProduct} key={currentproduct._id}/>;
        })
    }


    render() {
        return (
          <div>
            <h3>Logged Products</h3>
            <table className="table">
              <thead className="thead-light">
                <tr>
                  <th>Category</th>
                  <th>Product</th>
                  <th>Description</th>
                  <th>Price</th>
                  <th>Is it paid for?</th>
                  <th>Date</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                { this.productList() }
              </tbody>
            </table>
          </div>
        )
      }
}


edit-product.component

import React, { Component } from 'react';
import axios from 'axios';
import DatePicker from 'react-datepicker';
import "react-datepicker/dist/react-datepicker.css";

export default class EditProduct extends Component {
    constructor(props) {
        super(props);

        this.onChangeCategoryName = this.onChangeCategoryName.bind(this)
        this.onChangeProductName = this.onChangeProductName.bind(this);
        this.onChangeDescription = this.onChangeDescription.bind(this);
        this.onChangePrice = this.onChangePrice.bind(this);
        this.onChangePaidFor = this.onChangePaidFor.bind(this);
        this.onChangeDate = this.onChangeDate.bind(this);
        this.onSubmit = this.onSubmit.bind(this);

        this.state = {
            categoryName: '',
            productName: '',
            description: '',
            price: 0,
            paidFor: '',
            date: new Date(),
            listOfCategories: []
        }
    }

    componentDidMount() {
        axios.get('http://localhost:5000/products/'+this.props.match.params.id)
          .then(response => {
            this.setState({
                categoryName: response.data.categoryName,
                productName: response.data.productName,
                description: response.data.description,
                price: response.data.price,
                paidFor: response.data.paidFor,
                date: new Date(response.data.date)
            })   
          })
          .catch(function (error) {
            console.log(error);
          })
    
        axios.get('http://localhost:5000/categories/')
          .then(response => {
            if (response.data.length > 0) {
              this.setState({
                listOfCategories: response.data.map(category => category.categoryName),
              })
            }
          })
          .catch((error) => {
            console.log(error);
          })
    
    }

    onChangeCategoryName(e) {
        this.setState({
          categoryName: e.target.value
        })
    }
  
    onChangeProductName(e) {
          this.setState({
              productName: e.target.value
          });
    }
  
    onChangeDescription(e) {
          this.setState({
              description: e.target.value
          });
    }
  
    onChangePrice(e) {
          this.setState({
              price: e.target.value
          });
    }
      
    onChangePaidFor(e) {
          this.setState({
              paidFor: e.target.value
          });
    }
      
    onChangeDate(date) {
          this.setState({
              date: date
          });
    }

    onSubmit(e){
        e.preventDefault();

        const product = {
            categoryName: this.state.categoryName,
            productName: this.state.productName,
            description: this.state.description,
            price: this.state.price,
            paidFor: this.state.paidFor,
            date: this.state.date
        }

        console.log(product);

        axios.post('http://localhost:5000/products/update/'+this.props.match.params.id, product)
          .then(res => console.log(res.data));

        window.location = '/'
    }

    render() {
        return (
            <div>
              <h3>Edit Product Log</h3>
              <form onSubmit={this.onSubmit}>
                <div className="form-group"> 
                  <label>Category: </label>
                  <select ref="userInput"
                      required
                      className="form-control"
                      value={this.state.categoryName}
                      onChange={this.onChangeCategoryName}>
                      {
                        this.state.listOfCategories.map(function(categoryName) {
                          return <option 
                            key={categoryName}
                            value={categoryName}>{[categoryName]}
                            </option>;
                        })
                      }
                  </select>
                </div>
                <div className="form-group"> 
                  <label>Product: </label>
                  <input  type="text"
                      required
                      className="form-control"
                      value={this.state.productName}
                      onChange={this.onChangeProductName}
                      />
                </div>
                <div className="form-group"> 
                  <label>Description: </label>
                  <input  type="text"
                      required
                      className="form-control"
                      value={this.state.description}
                      onChange={this.onChangeDescription}
                      />
                </div>
                <div className="form-group">
                  <label>Price: </label>
                  <input 
                      type="text" 
                      className="form-control"
                      value={this.state.price}
                      onChange={this.onChangePrice}
                      />
                </div>
                <div className="form-group"> 
                  <label>Has it been paid for? </label>
                  <input  type="text"
                      required
                      className="form-control"
                      value={this.state.paidFor}
                      onChange={this.onChangePaidFor}
                      />
                </div>
                <div className="form-group">
                  <label>Date: </label>
                  <div>
                    <DatePicker
                      selected={this.state.date}
                      onChange={this.onChangeDate}
                    />
                  </div>
                </div>
        
                <div className="form-group">
                  <input type="submit" value="Edit Product Log" className="btn btn-primary" />
                </div>
              </form>
            </div>
            )
    }
}